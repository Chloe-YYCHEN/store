<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.store.mapper.UserMapper">
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <!--        将表的资源和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略不写-->
        <!--    配合完成名称不一致的映射-->
        <!--        column属性：表示表中的资源名称-->
        <!--        property属性：表示类中的属性名称-->
        <!--        在定义映射规则时主键是不可以省略的-->
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
        <!--    自定义映射规则：resultMap标签来完成映射规则的定义-->
        <!--    id属性：标签给这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值 -->
        <!--    type属性：取值是一个类，表示的是数据库中的查询结果与Java中哪个实体类进行结果集的映射-->
        <!--    插入用户数据：Integer insert(User user) -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO
        t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
        (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>
        <!--    根据用户名查询用户数据：User findByUsername(String username) -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM  t_user WHERE  username = #{username}
    </select>
</mapper>